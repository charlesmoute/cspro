{Application 'ELIGIBILITE' logic file generated by CSPro}
PROC GLOBAL

set explicit ;
numeric surveyStartTime,codeAgent;
file pffFile;

function launchIndividualDataEntry()
	string pffFilename,ident,mode = "add";
	
	pffFilename = "../Individual/individual.pff";
	ident = maketext("%d%02d%02d%03d%03d%03d%02d",ELIG_COMMUNE,ELIG_ZONE,ELIG_COLLINE,ELIG_ZD,
											ELIG_STRUCTURE,ELIG_NUMMENAGE,ELIG_NUMINDIVIDU);
	 
    if setfile(pffFile,pffFilename,create) = 0 then
    	errmsg("Echec à l'ouverture %s", pffFilename);
	endif;
	
    filewrite(pffFile,"[Run Information]");
    filewrite(pffFile,"Version=CSPro 7.0");
    filewrite(pffFile,"AppType=Entry");
    filewrite(pffFile,"\n");

    filewrite(pffFile,"[DataEntryInit]");
	filewrite(pffFile,"StartMode=%s;%s",mode, ident);
	filewrite(pffFile,"AutoAdd=NO");
	filewrite(pffFile,"Lock=Delete,Verify,Stats");
	filewrite(pffFile,"Interactive=Ask");
	filewrite(pffFile,"Language=FRANCAIS");
	filewrite(pffFile,"ShowInApplicationListing=Never");
	filewrite(pffFile,"\n");
	
	filewrite(pffFile,"[Files]");
	filewrite(pffFile,"Application=../Individual/individual.ent");
	filewrite(pffFile,"InputData=../Individual/Data/individual.csdb|CSPRODB");
	filewrite(pffFile,"\n");
	
	filewrite(pffFile,"[ExternalFiles]");
	filewrite(pffFile,"ELIGIBILITE_DICT=.\Data\eligibilite.csdb|CSPRODB");
	filewrite(pffFile,"HOUSEHOLD_DICT=..\Household\Data\household.csdb|CSPRODB");
    
    filewrite(pffFile,"[Parameters]");
    filewrite(pffFile,"STARTDATE=%d",ELIG_DATE);
    filewrite(pffFile,"ENDDATE=%s",sysparm("ENDDATE"));
    filewrite(pffFile,"ENDTIME=%s",sysparm("ENDTIME"));
    filewrite(pffFile,"STARTTIME=%s",sysparm("STARTTIME"));
    filewrite(pffFile,"COMMUNE=%d",visualvalue(ELIG_COMMUNE));
    filewrite(pffFile,"ZONE=%02d",visualvalue(ELIG_ZONE));
    filewrite(pffFile,"COLLINE=%02d",visualvalue(ELIG_COLLINE));
    filewrite(pffFile,"ZD=%03d",visualvalue(ELIG_ZD));
    filewrite(pffFile,"STRUCTURE=%03d",visualvalue(ELIG_STRUCTURE));
    filewrite(pffFile,"NUM_MENAGE=%03d",visualvalue(ELIG_NUMMENAGE));
    filewrite(pffFile,"NUM_INDIVIDU=%02d",visualvalue(ELIG_NUMINDIVIDU));
    
    //filewrite(pffFile,"AGENT=%d", LOGIN);
    filewrite(pffFile,"CATEGORIE=%d",CATEGORIE);
    if CATEGORIE=2 then
    	 filewrite(pffFile,"CASEID=%s",CASEID02);
    endif;
  
    close(pffFile);  
    execpff(pffFilename, stop);
end;

function OnChangeLanguage() 
	setvaluesets(concat("_",getlanguage()));
end;

function OnStop()
	
	if ispartial() then
		numeric choice = accept(maketext("[HandiSSR] Agent %d, est-ce un refus à poursuivre l'interview?",visualvalue(ELIG_AGENT)),
								"Non","Oui");
		if choice=1 then
			STATUT_DENOMBREMENT = 3;
		else
			STATUT_DENOMBREMENT = 4;
			H015B = 1 ; H016 = 2 ;
		endif;
	endif;
	
	open(HOUSEHOLD_DICT);
	if loadcase(HOUSEHOLD_DICT,ELIG_COMMUNE,ELIG_ZONE,ELIG_COLLINE,ELIG_ZD,ELIG_STRUCTURE,ELIG_NUMMENAGE)=1 then
		if STATUT_DENOMBREMENT= 3 then
			HOUSEHOLD_DICT.SUPERVISION.STATUT_INDIVIDU(ELIG_NUMINDIVIDU) = 2 ;
		elseif STATUT_DENOMBREMENT= 4 then
			HOUSEHOLD_DICT.SUPERVISION.STATUT_INDIVIDU(ELIG_NUMINDIVIDU) = 4 ;
		endif;
		writecase(HOUSEHOLD_DICT);
	endif;
	close(HOUSEHOLD_DICT);
	
	if (STATUT_DENOMBREMENT in 4,notappl) or ispartial() then
		execpff("../Menu/HandiSSR.pff", stop);
	else
		launchIndividualDataEntry();
	endif;
end;

PROC ELIGIBILITE_FF

PROC ELIGIBILITE_QUEST

preproc
// Capture des informations utiles pour la supervision
ELIG_DATE = sysdate("YYYYMMDD"); //Date du jour de collecte
ELIG_STARTTIME = systime("HHMM"); // Heure de lancement du questionnaire
surveyStartTime = timestamp(); //Heure en secondes pour le calcul de la durée d'administration du questionnaire
ELIG_DEVICEID = getdeviceid(); //adresse mac de l'appareil utilisé pour la collecte ou la saisie des données
// Nom du compte utilisateur sur l'appareil de collecte
ELIG_USERNAME = getusername(); // Risque d'un nom identique pour les tablettes si utilisation du même compte google

// Vérification que la date de l'appareil est correct par rapport à la date de création de
// de l'application
string StartDateKey = "StartDate";
numeric StartDateValue = tonumber(loadsetting(StartDateKey,sysparm(StartDateKey)));

if ELIG_DATE<StartDateValue then
	errmsg("[HandiSSR] Réglez la date et l'heure de votre appareil.");
	stop(0); 
elseif ELIG_DATE> StartDateValue then
	savesetting(StartDateKey,maketext("%d",ELIG_DATE));
endif;

// Enregistrement de la date de la première ouverture du questionnaire
if demode()=add then
	ELIG_STARTDATE = sysdate("YYYYMMDD");
	INCOHERENCE_SIGNALEE = 0; // l'année de naissance ne concorde pas à l'année déclarée au screening
endif;

//l'année de naissance ne concorde pas à l'année déclarée au screening
INCOHERENCE_DETECTEE = 0;

// Attribution d'un label à chaque occurence du roster H011
do numeric i = 1 while i <= 8
	string name = getocclabel(H011(i));
	setocclabel(H011_ROSTER(i),name);
enddo;

// Positionnement a la dernière question posée
if ispartial() then
	numeric choice = accept(maketext("[HandiSSR] Agent %d, voulez-vous aller à la dernière question posée?",visualvalue(ELIG_AGENT)),
								"Oui","Non");
	if choice=1 then
		move to getsymbol(savepartial) advance;
	endif;
endif;

postproc
// Modification du statut du ménage dans les données de dénombrement

if H016=2 then
	STATUT_DENOMBREMENT = 4;
elseif H016=1 then
	STATUT_DENOMBREMENT = 3;
endif;

open(HOUSEHOLD_DICT);
if loadcase(HOUSEHOLD_DICT,ELIG_COMMUNE,ELIG_ZONE,ELIG_COLLINE,ELIG_ZD,ELIG_STRUCTURE,ELIG_NUMMENAGE)=1 then
	HOUSEHOLD_DICT.SUPERVISION.STATUT_INDIVIDU(ELIG_NUMINDIVIDU) = 2;
	writecase(HOUSEHOLD_DICT); // Mise à jour des données
endif;
close(HOUSEHOLD_DICT); // Fermeture du dictionnaire ouvert dans la section identification

if accept(maketext("[HandiSSR] Agent %d, avez-vous des observations sur cet interview ?",ELIG_AGENT),"Oui","Non")=1 then
	editnote(ELIGIBILITE_DICT);
endif;

// Enregistrement de l'heure de fin de l'interview
ELIG_ENDTIME = systime("HHMM");
ELIG_SURVEYDURATION = round((timestamp()-surveyStartTime)/60);

// If launched by menu we should stop and return to menu
// here after questionnaire is completed. If not, in add mode
// we will start to add another case instead of going
// back to the menu.
launchIndividualDataEntry();
PROC ELIG_AGENT

preproc
string operatorID = "";
if demode()=add then
	if loadsetting("login") <> "" then
    	$ = tonumber(loadsetting("login"));
	else
		do until operatorID <> ""
			operatorID = prompt("Identifiant agent",numeric);
		enddo;
		$ = tonumber(operatorID);
	endif;
	setoperatorid(maketext("%d",visualvalue(ELIG_AGENT)));
else
	if loadsetting("login") <> "" then
    	ELIG_AGENT02 = tonumber(loadsetting("login"));
	else
		do until operatorID <> ""
			operatorID = prompt("Identifiant agent",numeric);
		enddo;
		ELIG_AGENT02 = tonumber(operatorID);
	endif;
	setoperatorid(maketext("%d",visualvalue(ELIG_AGENT02)));
endif; 
codeAgent = tonumber(getoperatorid());
set attributes ($) protect;
PROC ELIG_COMMUNE

preproc
if sysparm("COMMUNE") <> "" then
    $ = tonumber(sysparm("COMMUNE"));
    set attributes ($) protect;
endif;
PROC ELIG_ZONE

preproc
if sysparm("ZONE") <> "" then
    setvalueset(ELIG_ZONE,"ELIG_ZONE_VS4");
    $ = tonumber(sysparm("ZONE"));
    set attributes ($) protect;
else
	setvalueset(ELIG_ZONE,maketext("ELIG_ZONE_VS%d",ELIG_COMMUNE));
endif;
PROC ELIG_COLLINE

preproc
if sysparm("COLLINE") <> "" then
    setvalueset(ELIG_COLLINE,"ELIG_COLLINE_VS14");
    $ = tonumber(sysparm("COLLINE"));
    set attributes ($) protect;
else
	setvalueset(ELIG_COLLINE,maketext("ELIG_COLLINE_VS%d",ELIG_ZONE));
endif;
PROC ELIG_ZD

preproc
if sysparm("ZD") <> "" then
    $ = tonumber(sysparm("ZD"));
    set attributes ($) protect;
endif;
PROC ELIG_STRUCTURE

preproc
if sysparm("STRUCTURE") <> "" then
    $ = tonumber(sysparm("STRUCTURE"));
    set attributes ($) protect;
endif;
PROC ELIG_NUMMENAGE

preproc
if sysparm("NUM_MENAGE") <> "" then
    $ = tonumber(sysparm("NUM_MENAGE"));
    set attributes ($) protect;
endif;
PROC ELIG_NUMINDIVIDU

preproc
if sysparm("NUM_INDIVIDU") <> "" then
    $ = tonumber(sysparm("NUM_INDIVIDU"));
    set attributes ($) protect;
endif;
PROC INITIALES01
preproc
savepartial();
PROC CATEGORIE

preproc
if sysparm("CATEGORIE")<> "" then
	$ = tonumber(sysparm("CATEGORIE"));
	set attributes ($) protect;
endif; 
PROC ID01

{preproc
if visualvalue(CATEGORIE)=2 and sysparm("ID")<>"" then
	// Si on considére que les PT sont de 1001 a 1999 et les PH de 1 a 999
	ID01 =  1000 + tonumber(sysparm("ID"));
	set attributes ($) protect;
	// si ceci est valide ajoute le contenu de postproc ci-dessous
endif;}

postproc
CASEID01= maketext("%d%02d%02d%03d%03d%03d%02d",
				ELIG_COMMUNE,ELIG_ZONE,ELIG_COLLINE,ELIG_ZD,ELIG_STRUCTURE,ELIG_NUMMENAGE,ELIG_NUMINDIVIDU);
IDLAB01 = maketext("B%04d",$);

if visualvalue(CATEGORIE)=2 and sysparm("CASEID")<>"" then
	// Ajout des identifiants du PT qui lui est apparié
	CASEID02 = sysparm("CASEID");
	ID02 = tonumber(sysparm("ID"));
	IDLAB02 =  maketext("B%04d",ID02);
endif;
PROC H001

postproc
if $ > ELIG_YEAR then
	errmsg("[HandiSSR] L'année de naissance déclarée (%d) ne peut être supérée à celle encours",$);
	reenter;
endif;

numeric birthyear = notappl;
open(HOUSEHOLD_DICT);
if loadcase(HOUSEHOLD_DICT,ELIG_COMMUNE,ELIG_ZONE,ELIG_COLLINE,ELIG_ZD,ELIG_STRUCTURE,ELIG_NUMMENAGE)=1 then
	if visualvalue(ELIG_NUMINDIVIDU) <= count(HOUSEHOLD_DICT.MEMBRE) then
		birthyear = Q115B(ELIG_NUMINDIVIDU);
	endif;
endif;
close(HOUSEHOLD_DICT);

if (birthyear<>notappl) and ($<>birthyear) then
	inc(INCOHERENCE_SIGNALEE);
	errmsg("[HandiSSR] L'année de naissance déclarée (%d) est différente de celle au screening (%d). Vérifiez l'information auprès du répondant",$,birthyear)
		select("Corrigez l'année de naissance déclarée",$,
			   "Ignorez l'avertissement et continuez",continue);
	inc(INCOHERENCE_DETECTEE);
endif;


PROC ELIG_AGE

preproc
$ = ELIG_YEAR - H001;
{if visualvalue($)<15 or visualvalue($)>49 then
	inc(INCOHERENCE_SIGNALEE);
	errmsg("[HandiSSR] L'âge atteint par l'individu (%d) est hors de la plage 15-49 ans. Vérifiez l'information auprès du répondant",H001)
		select("Corrigez l'année de naissance déclarée",H001,
			   "Ignorez l'avertissement et continuez",continue);
endif;}
noinput;
//set attributes ($) protect;


PROC H002

preproc
savepartial();
if visualvalue(CATEGORIE)= 2 then
	skip to T02;
endif;
PROC H002A

preproc
if H002<>1 then
	skip to H002b;
endif;
PROC H003A

preproc
if H003<>1 then
	skip to H003b;
endif;
PROC H005E

postproc
string msg;
if pos("8",H005E)<>0 then
	msg="";
	do numeric i=1 while i<=7
		if pos(maketext("%d",i),$) <> 0 then
			msg = msg + maketext("%d",i);
		endif;	
	enddo;
	if msg<>"" then
		H005E = msg;
	endif;
endif;

if pos("7",H005E) <> 0 then // other (specify)
  msg = strip(H005E_02);
  msg = prompt("[HandiSSR] spécifiez l'"+tolower(getlabel(H005E_02))+" :",msg,UpperCase);
  H005E_02 = strip(msg);
else
	H005E_02 = "";
endif;

do numeric i=1 while i<=8
	if pos(maketext("%d",i),$) <> 0 then
		H005E_01(i) = 1;
	else
		H005E_01(i) = 2;
	endif;
enddo;
PROC H011_ROSTER

preproc
errmsg("[HandiSSR] Récapitulatif des critères d’inclusion et d’exclusion des personnes handicapées (ne pas poser ces questions à l’enquêté).");
PROC H011

preproc
numeric poscur = curocc();

if poscur=1 then
	if H002a=2 or H002b=2 or H003a=2 or H003b=2 then
		H011 = 1;
	else
		H011 = 2;
	endif;
elseif poscur=2 then
	if H004=2 then
		H011 = 1 ;
	else
		H011 = 2 ;
	endif;
elseif poscur=3 then
	if H005a=2 or H005b=2 or H005c=2 or H005d=2 then
		H011 = 1 ;
	else
		H011 = 2 ;
	endif;
elseif poscur=4 then
	if H006a=2 or H006b=2 then
		H011 = 1 ;
	else
		H011 = 2 ;
	endif;
elseif poscur=5 then
	if H007a=2 or H007b=2 then
		H011 = 1 ;
	else
		H011 = 2 ;
	endif;
elseif poscur=6 then
	if H008a=2 or H008b=2 or H008c=2 then
		H011 = 1 ;
	else
		H011 = 2 ;
	endif;
elseif poscur=7 then
	if H009=2 then
		H011 = 1 ;
	else
		H011 = 2 ;
	endif;
elseif poscur=8 then
	if H010=2 then
		H011 = 1 ;
	else
		H011 = 2 ;
	endif;
endif;
PROC T02

preproc
savepartial();
if visualvalue(CATEGORIE)= 1 then
	skip to H012;
endif;

postproc
if $<>1 then
	skip to T03b;
endif;
PROC T03A

preproc
if T02 <> 1 then
	skip to T03b;
endif;
PROC T04

postproc
if $ <> 1 then
	skip to T05b;
endif;
PROC T05A

preproc
if T04 <> 1 then
	skip to T05b;
endif;
PROC H012

preproc
if CATEGORIE=1 then
	NB_HANDICAPMINEUR = count(H011_ROSTER where H011=1);
	NB_HANDICAPMAJEUR = (H002a in 3,4) + (H002b in 3,4) + (H003a in 3,4) + (H003b in 3,4) +
						(H004  in 3,4) + (H005a in 3,4) + (H005b in 3,4) + (H005c in 3,4) +
						(H005d in 3,4) + (H006a in 3,4) + (H006b in 3,4) + (H007a in 3,4) +
						(H007b in 3,4) + (H008a in 3,4) + (H008b in 3,4) + (H008c in 3,4) +
						(H009  in 3,4) + (H010  in 3,4);
else
	
	NB_HANDICAPMINEUR = (T03a = 2) + (T03b = 2) + (T05a = 2) + (T05b = 2) + (T06  = 2) + 
						(T07  = 2) + (T08  = 2) + (T09  = 2) + (T10  = 2) + (T11  = 2) ;
	NB_HANDICAPMAJEUR = (T03a in 3,4) + (T03b in 3,4) + (T05a in 3,4) + (T05b in 3,4) + (T06  in 3,4) + 
						(T07  in 3,4) + (T08  in 3,4) + (T09  in 3,4) + (T10  in 3,4) + (T11 in 3,4) ;
endif; 

if CATEGORIE=1 then
	 if NB_HANDICAPMINEUR >=2 or NB_HANDICAPMAJEUR >=1 then
	 	H012 = 1;
	 else
	 	H012 = 2;
	 endif;
else
	if NB_HANDICAPMINEUR <=1 or NB_HANDICAPMAJEUR=0 then
	 	H012 = 1;
	 else
	 	H012 = 2;
	 endif;
endif;
noinput;
savepartial();
PROC H013

preproc
if ELIG_AGE>=15 and ELIG_AGE<=49 then
	H013 = 1 ;
else
	H013 = 2;
endif;
noinput;
PROC H015A

preproc
if H012=1 and H013=1 and H014=1 then
	H015A = 1;
else
	H015A = 2;
endif;
noinput;
PROC STATUT_HANDICAP

preproc
if H015A = 1 then
	STATUT_HANDICAP = CATEGORIE;
	noinput;
else
	setvalueset(STATUT_HANDICAP,maketext("STATUT_HANDICAP_VS%d",visualvalue(CATEGORIE)+1));
endif;

postproc
if $=3 then
	savepartial();
	stop();
endif;
PROC H015B

preproc
if STATUT_HANDICAP<>4 then
	skip to H016;
endif;

postproc
if $ <> 6 then // other (specify)
  string msg = strip(H015B_06);
  msg = prompt("[HandiSSR] spécifiez l'"+tolower(getlabel(H015B_06))+" :",msg,UpperCase);
  H015B_06 = strip(msg);
else
	H015B_06 = "";
endif;
PROC H016

preproc
if STATUT_HANDICAP = 4 then
	$ = 2 ;
	//set attributes ($) protect;
	noinput;
else
	errmsg("[HandiSSR] Agent %d, réalisez le processus du consentement.",visualvalue(ELIG_AGENT));
endif;
